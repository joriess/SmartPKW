/*
 * SmartPKW
 * Die SmartPKW API ermöglicht die Organisation von Fahrgemeinschaften.  - Benutzerverwaltung - Planung von Rides   - Ein Ride enthält eine von Google Routes generiete Route, welche alle Haltepunkte des Rides enthält.   - Ein Ride enthält mindestens den Haltepunkt \"Start\" und \"Ziel\".   - Jeder Haltepunkt ist an einen Zeitraum gebunden. Der Zeitraum berechnet sich von Google Maps Distance Matrix in Abhängigkeit des geplanten Fahrbeginns.   - Benutzer können Rides teilnehmen, indem sie ...        - ... zwei Haltepunkte vorschlagen. Dieser Vorschlag kann vom Ride-Ersteller angenommen oder angelehnt werden. Beim Ablehnen kann eine Nachricht hinzugefügt werden und es kann ein anderer Vorschlag für den Ein- und/oder Ausstiegspunkt gesendet werden.       - ... einen Haltepunkt vorschlagen. Neben diesem Vorschlag wird einer vorhandenen Haltepunkte zum Ein- bzw. Aussteigen des Mitfahrers verwendet.       - ... an zwei bestehenden Haltepunkten (zum Ein- und Aussteigen) teilnehmen.   - Automatisches Ablehnen der vorgeschlagengen Haltepunkten, wenn der Fahrer den ersten dieser Haltepunkte passiert hat.   - Nach der Teilnahme an einem kann jeder jeden bewerten.   - Bewertungsuntergrenze    
 *
 * OpenAPI spec version: 1.0.0
 * Contact: henning.westervelt@hof-university.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import javax.validation.constraints.*;

/**
 * ReviewWithoutId
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2019-01-05T15:11:31.517Z")
public class ReviewWithoutId   {
  @JsonProperty("rating")
  private Integer rating = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("createdByUserById")
  private Long createdByUserById = null;

  @JsonProperty("createdForUserById")
  private Long createdForUserById = null;

  @JsonProperty("createdOn")
  private Date createdOn = null;

  public ReviewWithoutId rating(Integer rating) {
    this.rating = rating;
    return this;
  }

  /**
   * rating is one, two, three, four or five
   * @return rating
   **/
  @JsonProperty("rating")
  @ApiModelProperty(required = true, value = "rating is one, two, three, four or five")
  @NotNull
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public ReviewWithoutId comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   **/
  @JsonProperty("comment")
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ReviewWithoutId createdByUserById(Long createdByUserById) {
    this.createdByUserById = createdByUserById;
    return this;
  }

  /**
   * Get createdByUserById
   * @return createdByUserById
   **/
  @JsonProperty("createdByUserById")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getCreatedByUserById() {
    return createdByUserById;
  }

  public void setCreatedByUserById(Long createdByUserById) {
    this.createdByUserById = createdByUserById;
  }

  public ReviewWithoutId createdForUserById(Long createdForUserById) {
    this.createdForUserById = createdForUserById;
    return this;
  }

  /**
   * Get createdForUserById
   * @return createdForUserById
   **/
  @JsonProperty("createdForUserById")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getCreatedForUserById() {
    return createdForUserById;
  }

  public void setCreatedForUserById(Long createdForUserById) {
    this.createdForUserById = createdForUserById;
  }

  public ReviewWithoutId createdOn(Date createdOn) {
    this.createdOn = createdOn;
    return this;
  }

  /**
   * Get createdOn
   * @return createdOn
   **/
  @JsonProperty("createdOn")
  @ApiModelProperty(value = "")
  public Date getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(Date createdOn) {
    this.createdOn = createdOn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReviewWithoutId reviewWithoutId = (ReviewWithoutId) o;
    return Objects.equals(this.rating, reviewWithoutId.rating) &&
        Objects.equals(this.comment, reviewWithoutId.comment) &&
        Objects.equals(this.createdByUserById, reviewWithoutId.createdByUserById) &&
        Objects.equals(this.createdForUserById, reviewWithoutId.createdForUserById) &&
        Objects.equals(this.createdOn, reviewWithoutId.createdOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rating, comment, createdByUserById, createdForUserById, createdOn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReviewWithoutId {\n");
    
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    createdByUserById: ").append(toIndentedString(createdByUserById)).append("\n");
    sb.append("    createdForUserById: ").append(toIndentedString(createdForUserById)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

